{
  "version": 3,
  "sources": ["../../@mui/styled-engine/StyledEngineProvider/StyledEngineProvider.js", "../../@mui/styled-engine/StyledEngineProvider/index.js", "../../@mui/styled-engine/GlobalStyles/GlobalStyles.js", "../../@mui/styled-engine/GlobalStyles/index.js", "../../@mui/styled-engine/index.js"],
  "sourcesContent": ["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache'; // prepend: true moves MUI styles to the top of the <head> so they're loaded first.\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst cache = createCache({\n  key: 'css',\n  prepend: true\n});\nexport default function StyledEngineProvider(props) {\n  const {\n    injectFirst,\n    children\n  } = props;\n  return injectFirst ? /*#__PURE__*/_jsx(CacheProvider, {\n    value: cache,\n    children: children\n  }) : children;\n}\nprocess.env.NODE_ENV !== \"production\" ? StyledEngineProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override MUI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool\n} : void 0;", "export { default } from './StyledEngineProvider';", "import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Global } from '@emotion/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\n\nexport default function GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/_jsx(Global, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes = {\n  defaultTheme: PropTypes.object,\n  styles: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.func])\n} : void 0;", "export { default } from './GlobalStyles';", "/** @license MUI v5.2.6\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport emStyled from '@emotion/styled';\nexport default function styled(tag, options) {\n  const stylesFactory = emStyled(tag, options);\n\n  if (process.env.NODE_ENV !== 'production') {\n    return (...styles) => {\n      const component = typeof tag === 'string' ? `\"${tag}\"` : 'component';\n\n      if (styles.length === 0) {\n        console.error([`MUI: Seems like you called \\`styled(${component})()\\` without a \\`style\\` argument.`, 'You must provide a `styles` argument: `styled(\"div\")(styleYouForgotToPass)`.'].join('\\n'));\n      } else if (styles.some(style => style === undefined)) {\n        console.error(`MUI: the styled(${component})(...args) API requires all its args to be defined.`);\n      }\n\n      return stylesFactory(...styles);\n    };\n  }\n\n  return stylesFactory;\n}\nexport { ThemeContext, keyframes, css } from '@emotion/react';\nexport { default as StyledEngineProvider } from './StyledEngineProvider';\nexport { default as GlobalStyles } from './GlobalStyles';"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWe,SAAR,qBAAsC,OAAO;AAClD,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI;AACJ,SAAO,kBAA2B,mBAAAA,KAAK,eAAe;AAAA,IACpD,OAAO;AAAA,IACP;AAAA,EACF,CAAC,IAAI;AACP;AApBA,WACA,mBAKA,oBACM;AAPN;AAAA;AAAA,YAAuB;AACvB,wBAAsB;AACtB;AACA;AAGA,yBAA4B;AAC5B,IAAM,QAAQ,kCAAY;AAAA,MACxB,KAAK;AAAA,MACL,SAAS;AAAA,IACX,CAAC;AAWD,WAAwC,qBAAqB,YAAY;AAAA;AAAA;AAAA;AAAA,MAIvE,UAAU,kBAAAC,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOpB,aAAa,kBAAAA,QAAU;AAAA,IACzB,IAAI;AAAA;AAAA;;;ACjCJ,IAAAC,6BAAA;AAAA;AAAA;AAAA;AAAA;;;ACKA,SAAS,QAAQ,KAAK;AACpB,SAAO,QAAQ,UAAa,QAAQ,QAAQ,OAAO,KAAK,GAAG,EAAE,WAAW;AAC1E;AAEe,SAAR,aAA8B,OAAO;AAC1C,QAAM;AAAA,IACJ;AAAA,IACA,eAAe,CAAC;AAAA,EAClB,IAAI;AACJ,QAAM,eAAe,OAAO,WAAW,aAAa,gBAAc,OAAO,QAAQ,UAAU,IAAI,eAAe,UAAU,IAAI;AAC5H,aAAoB,oBAAAC,KAAK,QAAQ;AAAA,IAC/B,QAAQ;AAAA,EACV,CAAC;AACH;AAlBA,IAAAC,QACAC,oBAEAC;AAHA;AAAA;AAAA,IAAAF,SAAuB;AACvB,IAAAC,qBAAsB;AACtB;AACA,IAAAC,sBAA4B;AAgB5B,WAAwC,aAAa,YAAY;AAAA,MAC/D,cAAc,mBAAAC,QAAU;AAAA,MACxB,QAAQ,mBAAAA,QAAU,UAAU,CAAC,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,QAAQ,mBAAAA,QAAU,IAAI,CAAC;AAAA,IAClF,IAAI;AAAA;AAAA;;;ACtBJ,IAAAC,qBAAA;AAAA;AAAA;AAAA;AAAA;;;ACMe,SAAR,OAAwB,KAAK,SAAS;AAC3C,QAAM,gBAAgB,mCAAS,KAAK,OAAO;AAE3C,MAAI,MAAuC;AACzC,WAAO,IAAI,WAAW;AACpB,YAAM,YAAY,OAAO,QAAQ,WAAW,IAAI,SAAS;AAEzD,UAAI,OAAO,WAAW,GAAG;AACvB,gBAAQ,MAAM,CAAC,uCAAuC,gDAAgD,8EAA8E,EAAE,KAAK,IAAI,CAAC;AAAA,MAClM,WAAW,OAAO,KAAK,WAAS,UAAU,MAAS,GAAG;AACpD,gBAAQ,MAAM,mBAAmB,8DAA8D;AAAA,MACjG;AAEA,aAAO,cAAc,GAAG,MAAM;AAAA,IAChC;AAAA,EACF;AAEA,SAAO;AACT;AAxBA;AAAA;AAKA;AAoBA;AACA,IAAAC;AACA,IAAAC;AAAA;AAAA;",
  "names": ["_jsx", "PropTypes", "init_StyledEngineProvider", "_jsx", "React", "import_prop_types", "import_jsx_runtime", "PropTypes", "init_GlobalStyles", "init_StyledEngineProvider", "init_GlobalStyles"]
}
