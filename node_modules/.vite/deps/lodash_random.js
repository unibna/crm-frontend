import {
  require_isIterateeCall
} from "./chunk-KLJR7T2X.js";
import "./chunk-QOTZERIG.js";
import "./chunk-5CC7CYWH.js";
import "./chunk-O5ZXKUCR.js";
import "./chunk-NY7RRCO3.js";
import "./chunk-Q5LKNY5N.js";
import {
  require_toFinite
} from "./chunk-KTHQYTVY.js";
import "./chunk-HXFB237V.js";
import "./chunk-C5YLB4K3.js";
import "./chunk-MVZWFGHC.js";
import "./chunk-BGN33HDB.js";
import "./chunk-MSSXYT6P.js";
import {
  __commonJS
} from "./chunk-TFWDKVI3.js";

// node_modules/lodash/_baseRandom.js
var require_baseRandom = __commonJS({
  "node_modules/lodash/_baseRandom.js"(exports, module) {
    var nativeFloor = Math.floor;
    var nativeRandom = Math.random;
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }
    module.exports = baseRandom;
  }
});

// node_modules/lodash/random.js
var require_random = __commonJS({
  "node_modules/lodash/random.js"(exports, module) {
    var baseRandom = require_baseRandom();
    var isIterateeCall = require_isIterateeCall();
    var toFinite = require_toFinite();
    var freeParseFloat = parseFloat;
    var nativeMin = Math.min;
    var nativeRandom = Math.random;
    function random(lower, upper, floating) {
      if (floating && typeof floating != "boolean" && isIterateeCall(lower, upper, floating)) {
        upper = floating = void 0;
      }
      if (floating === void 0) {
        if (typeof upper == "boolean") {
          floating = upper;
          upper = void 0;
        } else if (typeof lower == "boolean") {
          floating = lower;
          lower = void 0;
        }
      }
      if (lower === void 0 && upper === void 0) {
        lower = 0;
        upper = 1;
      } else {
        lower = toFinite(lower);
        if (upper === void 0) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
      }
      return baseRandom(lower, upper);
    }
    module.exports = random;
  }
});
export default require_random();
//# sourceMappingURL=lodash_random.js.map
