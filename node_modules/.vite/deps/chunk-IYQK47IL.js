import {
  Dialog_default,
  dialogClasses_default
} from "./chunk-WDHKLQJJ.js";
import {
  DialogActions_default
} from "./chunk-24MLXHUC.js";
import {
  DialogContent_default
} from "./chunk-U6CK7BQU.js";
import {
  DIALOG_WIDTH,
  WrapperVariantContext
} from "./chunk-5WRRARR4.js";
import {
  Button_default
} from "./chunk-2GAJVS65.js";
import {
  styled_default
} from "./chunk-OLZETHCB.js";
import {
  _objectWithoutPropertiesLoose,
  init_objectWithoutPropertiesLoose
} from "./chunk-LCB5PCMX.js";
import {
  _extends,
  init_extends
} from "./chunk-S4J2UMZF.js";
import {
  require_jsx_runtime
} from "./chunk-LDDDBTIY.js";
import {
  require_react
} from "./chunk-LBQWZZ6Z.js";
import {
  __toESM
} from "./chunk-TFWDKVI3.js";

// node_modules/@mui/lab/internal/pickers/wrappers/MobileWrapper.js
init_extends();
init_objectWithoutPropertiesLoose();
var React2 = __toESM(require_react());

// node_modules/@mui/lab/internal/pickers/PickersModalDialog.js
init_extends();
var React = __toESM(require_react());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var PickersModalDialogRoot = styled_default(Dialog_default, {
  skipSx: true
})({
  [`& .${dialogClasses_default.container}`]: {
    outline: 0
  },
  [`& .${dialogClasses_default.paper}`]: {
    outline: 0,
    minWidth: DIALOG_WIDTH
  }
});
var PickersModalDialogContent = styled_default(DialogContent_default, {
  skipSx: true
})({
  "&:first-of-type": {
    padding: 0
  }
});
var PickersModalDialogActions = styled_default(DialogActions_default, {
  skipSx: true
})(({
  ownerState
}) => _extends({}, (ownerState.clearable || ownerState.showTodayButton) && {
  // set justifyContent to default value to fix IE11 layout bug
  // see https://github.com/mui-org/material-ui-pickers/pull/267
  justifyContent: "flex-start",
  "& > *:first-of-type": {
    marginRight: "auto"
  }
}));
var PickersModalDialog = (props) => {
  const {
    cancelText = "Cancel",
    children,
    clearable = false,
    clearText = "Clear",
    DialogProps = {},
    okText = "OK",
    onAccept,
    onClear,
    onDismiss,
    onSetToday,
    open,
    showTodayButton = false,
    todayText = "Today"
  } = props;
  const ownerState = props;
  return (0, import_jsx_runtime2.jsxs)(PickersModalDialogRoot, _extends({
    open,
    onClose: onDismiss
  }, DialogProps, {
    children: [(0, import_jsx_runtime.jsx)(PickersModalDialogContent, {
      children
    }), (0, import_jsx_runtime2.jsxs)(PickersModalDialogActions, {
      ownerState,
      children: [clearable && (0, import_jsx_runtime.jsx)(Button_default, {
        onClick: onClear,
        children: clearText
      }), showTodayButton && (0, import_jsx_runtime.jsx)(Button_default, {
        onClick: onSetToday,
        children: todayText
      }), cancelText && (0, import_jsx_runtime.jsx)(Button_default, {
        onClick: onDismiss,
        children: cancelText
      }), okText && (0, import_jsx_runtime.jsx)(Button_default, {
        onClick: onAccept,
        children: okText
      })]
    })]
  }));
};
var PickersModalDialog_default = PickersModalDialog;

// node_modules/@mui/lab/internal/pickers/wrappers/MobileWrapper.js
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
var import_jsx_runtime4 = __toESM(require_jsx_runtime());
var _excluded = ["cancelText", "children", "clearable", "clearText", "DateInputProps", "DialogProps", "okText", "onAccept", "onClear", "onDismiss", "onSetToday", "open", "PureDateInputComponent", "showTodayButton", "todayText"];
function MobileWrapper(props) {
  const {
    cancelText,
    children,
    clearable,
    clearText,
    DateInputProps,
    DialogProps,
    okText,
    onAccept,
    onClear,
    onDismiss,
    onSetToday,
    open,
    PureDateInputComponent,
    showTodayButton,
    todayText
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);
  return (0, import_jsx_runtime4.jsxs)(WrapperVariantContext.Provider, {
    value: "mobile",
    children: [(0, import_jsx_runtime3.jsx)(PureDateInputComponent, _extends({}, other, DateInputProps)), (0, import_jsx_runtime3.jsx)(PickersModalDialog_default, {
      cancelText,
      clearable,
      clearText,
      DialogProps,
      okText,
      onAccept,
      onClear,
      onDismiss,
      onSetToday,
      open,
      showTodayButton,
      todayText,
      children
    })]
  });
}
var MobileWrapper_default = MobileWrapper;

export {
  MobileWrapper_default
};
//# sourceMappingURL=chunk-IYQK47IL.js.map
