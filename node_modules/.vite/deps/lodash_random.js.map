{
  "version": 3,
  "sources": ["../../lodash/_baseRandom.js", "../../lodash/random.js"],
  "sourcesContent": ["/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n", "var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA,QAAI,cAAc,KAAK;AAAvB,QACI,eAAe,KAAK;AAWxB,aAAS,WAAW,OAAO,OAAO;AAChC,aAAO,QAAQ,YAAY,aAAa,KAAK,QAAQ,QAAQ,EAAE;AAAA,IACjE;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACjBjB;AAAA;AAAA,QAAI,aAAa;AAAjB,QACI,iBAAiB;AADrB,QAEI,WAAW;AAGf,QAAI,iBAAiB;AAGrB,QAAI,YAAY,KAAK;AAArB,QACI,eAAe,KAAK;AAiCxB,aAAS,OAAO,OAAO,OAAO,UAAU;AACtC,UAAI,YAAY,OAAO,YAAY,aAAa,eAAe,OAAO,OAAO,QAAQ,GAAG;AACtF,gBAAQ,WAAW;AAAA,MACrB;AACA,UAAI,aAAa,QAAW;AAC1B,YAAI,OAAO,SAAS,WAAW;AAC7B,qBAAW;AACX,kBAAQ;AAAA,QACV,WACS,OAAO,SAAS,WAAW;AAClC,qBAAW;AACX,kBAAQ;AAAA,QACV;AAAA,MACF;AACA,UAAI,UAAU,UAAa,UAAU,QAAW;AAC9C,gBAAQ;AACR,gBAAQ;AAAA,MACV,OACK;AACH,gBAAQ,SAAS,KAAK;AACtB,YAAI,UAAU,QAAW;AACvB,kBAAQ;AACR,kBAAQ;AAAA,QACV,OAAO;AACL,kBAAQ,SAAS,KAAK;AAAA,QACxB;AAAA,MACF;AACA,UAAI,QAAQ,OAAO;AACjB,YAAI,OAAO;AACX,gBAAQ;AACR,gBAAQ;AAAA,MACV;AACA,UAAI,YAAY,QAAQ,KAAK,QAAQ,GAAG;AACtC,YAAI,OAAO,aAAa;AACxB,eAAO,UAAU,QAAS,QAAQ,QAAQ,QAAQ,eAAe,UAAU,OAAO,IAAI,SAAS,EAAE,IAAK,KAAK;AAAA,MAC7G;AACA,aAAO,WAAW,OAAO,KAAK;AAAA,IAChC;AAEA,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
