import {
  appendErrors,
  get,
  set
} from "./chunk-PO3XV4DT.js";
import "./chunk-LBQWZZ6Z.js";
import "./chunk-TFWDKVI3.js";

// node_modules/@hookform/resolvers/dist/resolvers.module.js
var i = function(e, i2) {
  for (var a2 in i2.fields) {
    var f = i2.fields[a2];
    if (f && f.ref && "reportValidity" in f.ref) {
      var t = get(e, a2);
      f.ref.setCustomValidity(t && t.message || ""), f.ref.reportValidity();
    }
  }
};
var a = function(a2, f) {
  f.shouldUseNativeValidation && i(a2, f);
  var t = {};
  for (var o2 in a2) {
    var s = get(f.fields, o2);
    set(t, o2, Object.assign(a2[o2], { ref: s && s.ref }));
  }
  return t;
};

// node_modules/@hookform/resolvers/yup/dist/yup.module.js
var o = function(o2, n, a2) {
  return void 0 === n && (n = {}), void 0 === a2 && (a2 = {}), function(s, i2, c) {
    try {
      return Promise.resolve(function(t, r) {
        try {
          var u = (n.context && true && console.warn("You should not used the yup options context. Please, use the 'useForm' context object instead"), Promise.resolve(o2["sync" === a2.mode ? "validateSync" : "validate"](s, Object.assign({ abortEarly: false }, n, { context: i2 }))).then(function(t2) {
            return c.shouldUseNativeValidation && i({}, c), { values: t2, errors: {} };
          }));
        } catch (e) {
          return r(e);
        }
        return u && u.then ? u.then(void 0, r) : u;
      }(0, function(e) {
        return { values: {}, errors: a((o3 = e, n2 = !c.shouldUseNativeValidation && "all" === c.criteriaMode, (o3.inner || []).reduce(function(e2, t) {
          if (e2[t.path] || (e2[t.path] = { message: t.message, type: t.type }), n2) {
            var o4 = e2[t.path].types, a3 = o4 && o4[t.type];
            e2[t.path] = appendErrors(t.path, n2, e2, t.type, a3 ? [].concat(a3, t.message) : t.message);
          }
          return e2;
        }, {})), c) };
        var o3, n2;
      }));
    } catch (e) {
      return Promise.reject(e);
    }
  };
};
export {
  o as yupResolver
};
//# sourceMappingURL=@hookform_resolvers_yup.js.map
